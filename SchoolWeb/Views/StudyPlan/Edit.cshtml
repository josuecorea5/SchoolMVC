@model EditStudyPlanViewModel

<div class="card shadow border-0 mt-4">
	<div class="card-header bg-light-subtle bg-gradient ml-0 py-3">
		<div class="row">
			<div class="col-12 text-center">
				<h3 class="text-primary">Edit Study Plan</h3>
			</div>
		</div>
	</div>
	<div class="card-body p-4">
		<form method="post" class="row">
			<div class="border p-3">
				<div class="form-floating py-2 col-12 mb-3">
					<input type="hidden" id="subjectsSelectedIds" asp-for="SubjectIds" />
					<input type="hidden" id="studyPlanId" asp-for="Id" />
					<select disabled asp-for="GradeId" class="form-select border-0 shadow">
						<option selected>@Model.Grade.Text</option>
					</select>
					<label class="ms-1">Study plan grade</label>
					<span asp-validation-for="GradeId" class="text-danger"></span>
				</div>
				<h4 class="text-center">Current Subjects</h4>
				<div class="form-floating py-2 col-12">
					<ul class="list-group" id="current-subjects">
						@if(Model.ListStudyPlanSubject.Count() == 0)
						{
							<p id="listStudyPlanTitle">No subjects</p>
						}else
						{
							@foreach (var subject in Model.ListStudyPlanSubject)
							{
								<li class="list-group-item d-flex justify-content-between align-items-center p-3">
									<p class="mb-0">@subject.Subject.Name</p>
									<button class="btn btn-outline-primary btn-remove" data-id="@subject.Id">Remove</button>
								</li>
							}
							<span asp-validation-for="SubjectIds" class="text-danger"></span>
						}
					</ul>
					<h4 class="text-center m-3">Subjects availables</h4>
					<ul class="list-group" id="subject-availables">
						@if(Model.ListSubject.Count() == 0)
						{
							<p id="noSubjectsMessage">There are not more subjects availables</p>
						}else
						{
							@foreach (var subject in Model.ListSubject)
							{
								<li class="list-group-item d-flex justify-content-between align-items-center p-3">
									<p class="mb-0">@subject.Name</p>
									<button class="btn btn-outline-primary btn-add" data-id="@subject.Id">Add</button>
								</li>
							}
						}
					</ul>
				</div>
				<div class="row pt-2">
					<div class="col-6 col-md-3">
						<a asp-controller="StudyPlan" id="studyPlanGoBack" asp-action="Index" class="btn btn-secondary bg-transparent text-primary form-control">Back to list</a>
					</div>
				</div>
			</div>
		</form>
	</div>
</div>

@section Scripts {
	@{
																						<partial name="_ValidationScriptsPartial" />
	}

	<script type="text/javascript">
		$(document).ready(function () {
			let currentIds = [];

			$(document).on("click", ".btn-remove", function (event) {
				event.preventDefault();
				let id = $(this).data("id");
				let btnId = $(this);
				let listItem = btnId.closest("li");
				Delete(`/studyPlan/deleteSubject?id=${id}`, listItem, id, currentIds);
			})

			$(".btn-remove").each(function () {
				currentIds.push($(this).data("id"));
			})

			$(document).on("click", ".btn-add", function (event) {
				event.preventDefault();
				let btnId = $(this);
				let id = btnId.data("id")
				let studyPlanId = $("#studyPlanId").val();
				let element = btnId.closest("li");

				$.ajax({
					url: "/studyPlanSubject/create",
					type: 'POST',
					data: {
						StudyPlanId: studyPlanId,
						SubjectId: id
					},
					success: function (data) {
						if (data.success) {
							Swal.fire({
								title: "Done!",
								text: data.message,
								icon: "success"
							});
							element.remove();

							if ($("#listStudyPlanTitle")) {
								$("#listStudyPlanTitle").remove();
							}

							let currentSubjectList = $("#current-subjects");
							element.find("button").removeClass("btn-add");
							element.find("button").addClass("btn-remove");
							element.find('button').text("Remove");
							element.find('button').attr("data-id", data.id);
							currentSubjectList.append(element);

							if ($("#subject-availables").find("li").length === 0) {
								$("#subject-availables").append("<p>There are not more subjects availables</p>")
							}
						} else {
							Swal.fire({
								title: "Error!",
								text: data.message,
								icon: "error"
							});
						}
					},
					error: function (data) {
						Swal.fire({
							title: "Error!",
							text: "Something failed while adding the subject",
							icon: "error"
						});
					}
				})
			});
		})

		function Delete(url, element, btnId, currentIds) {
			Swal.fire({
				title: "Do you want to delete this subject?",
				text: "You won't be able to revert this!",
				icon: "warning",
				showCancelButton: true,
				confirmButtonColor: "#3085d6",
				cancelButtonColor: "#d33",
				confirmButtonText: "Yes, delete it!"
			}).then((result) => {
				if (result.isConfirmed) {
					let index = currentIds.indexOf(btnId);
					$.ajax({
						url: url,
						type: 'DELETE',
						success: function (data) {
							Swal.fire({
								title: "Deleted!",
								text: data.message,
								icon: "success"
							});
							element.remove();
							currentIds.splice(index, 1)
							$("#subjectsSelectedIds").val(currentIds.join(","));
							let listSubjectAvailables = $("#subject-availables");
							if (listSubjectAvailables.next("p")) {
								console.log("HERE WEEE GOOO")
								$("#noSubjectsMessage").remove();
							}

							if ($("#current-subjects").children("li").length === 0) {
								$("#current-subjects").append("<p id='listStudyPlanTitle'>No subjects</p>");
							}

							element.find("button").removeClass("btn-remove");
							element.find("button").addClass("btn-add");
							element.find('button').text("Add");
							element.find("button").attr("data-id", data.subjectId);
							listSubjectAvailables.append(element);
						},
						error: function (error) {
							Swal.fire({
								title: "Error!",
								text: "Something failed while deleting the subject",
								icon: "error"
							});
						}
					})
				}
			});
		}
	</script>
}